-- Optimized and compact version of the given UI library

local ui = {windowCount = 0, flags = {}}
local s = setmetatable({}, {
	__index = function(_, k) return game:GetService(k) end,
	__newindex = function() end
})
local plr, mouse = s.Players.LocalPlayer, s.Players.LocalPlayer:GetMouse()
local top

local function drag(obj, handle)
	handle = handle or obj
	local dragging, startPos, startUDim

	handle.InputBegan:Connect(function(i)
		if i.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging, startPos, startUDim = true, i.Position, obj.Position
			i.Changed:Connect(function()
				if i.UserInputState == Enum.UserInputState.End then dragging = false end
			end)
		end
	end)

	obj.InputChanged:Connect(function(i)
		if i.UserInputType == Enum.UserInputType.MouseMovement then
			s.UserInputService.InputChanged:Connect(function(m)
				if m == i and dragging then
					local delta = m.Position - startPos
					obj.Position = UDim2.new(startUDim.X.Scale, startUDim.X.Offset + delta.X, startUDim.Y.Scale, startUDim.Y.Offset + delta.Y)
				end
			end)
		end
	end)
end

local function clickFX(b)
	task.spawn(function()
		if not b.ClipsDescendants then b.ClipsDescendants = true end
		local img = Instance.new("ImageLabel")
		img.Name = "Ripple"
		img.Parent = b
		img.BackgroundTransparency = 1
		img.Image = "rbxassetid://2708891598"
		img.ImageTransparency = 0.8
		img.ImageColor3 = Color3.fromRGB(131,132,255)
		img.Size = UDim2.new(0,0,0,0)
		img.Position = UDim2.new((mouse.X-b.AbsolutePosition.X)/b.AbsoluteSize.X,0,(mouse.Y-b.AbsolutePosition.Y)/b.AbsoluteSize.Y,0)
		s.TweenService:Create(img, TweenInfo.new(1), {Size = UDim2.new(12,0,12,0), Position = UDim2.new(-5.5,0,-5.5,0)}):Play()
		task.wait(0.25)
		s.TweenService:Create(img, TweenInfo.new(0.5), {ImageTransparency = 1}):Play()
		repeat task.wait() until img.ImageTransparency == 1
		img:Destroy()
	end)
end

local gui = Instance.new("ScreenGui")
gui.Name = s.HttpService:GenerateGUID(false)
gui.Parent = s.RunService:IsStudio() and plr:WaitForChild("PlayerGui") or s.CoreGui
s.UserInputService.InputBegan:Connect(function(i, g) if i.KeyCode == Enum.KeyCode.LeftShift and not g then gui.Enabled = not gui.Enabled end end)

function ui:Window(title)
	ui.windowCount += 1
	local y = Instance.new("Frame")
	y.Name = "Top"
	y.Parent = gui
	y.BackgroundColor3 = Color3.fromRGB(43,43,43)
	y.Size = UDim2.new(0,212,0,36)
	y.Position = UDim2.new(0,25,0,-30 + 42 * ui.windowCount)
	drag(y)

	local line = Instance.new("Frame")
	line.Name = "WindowLine"
	line.Parent = y
	line.BackgroundColor3 = Color3.fromRGB(30,30,30)
	line.BorderSizePixel = 0
	line.Position = UDim2.new(0,0,0,34)
	line.Size = UDim2.new(0,212,0,2)

	local header = Instance.new("TextLabel")
	header.Parent = y
	header.BackgroundTransparency = 1
	header.Size = UDim2.new(0,54,0,34)
	header.Font = Enum.Font.GothamSemibold
	header.Text = "   " .. tostring(title)
	header.TextColor3 = Color3.new(1,1,1)
	header.TextSize = 14
	header.TextXAlignment = Enum.TextXAlignment.Left

	local toggle = Instance.new("TextButton")
	toggle.Name = "WindowToggle"
	toggle.Parent = y
	toggle.BackgroundTransparency = 1
	toggle.Position = UDim2.new(0.835, 0, 0, 0)
	toggle.Size = UDim2.new(0, 34, 0, 34)

	local toggleImg = Instance.new("ImageLabel")
	toggleImg.Name = "WindowToggleImg"
	toggleImg.Parent = toggle
	toggleImg.AnchorPoint = Vector2.new(0.5, 0.5)
	toggleImg.Position = UDim2.new(0.5, 0, 0.5, 0)
	toggleImg.Size = UDim2.new(0, 18, 0, 18)
	toggleImg.BackgroundTransparency = 1
	toggleImg.Image = "rbxassetid://3926305904"
	toggleImg.ImageRectOffset = Vector2.new(524, 764)
	toggleImg.ImageRectSize = Vector2.new(36, 36)
	toggleImg.Rotation = 180

	local bottom = Instance.new("Frame")
	bottom.Name = "Bottom"
	bottom.Parent = y
	bottom.BackgroundColor3 = Color3.fromRGB(38,38,38)
	bottom.BorderSizePixel = 0
	bottom.ClipsDescendants = true
	bottom.Position = UDim2.new(0, 0, 1, 0)
	bottom.Size = UDim2.new(0, 212, 0, 0)

	local layout = Instance.new("UIListLayout")
	layout.Name = "BottomLayout"
	layout.Parent = bottom
	layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Padding = UDim.new(0, 4)

	Instance.new("Frame", bottom).Name = "PaddingThing"

	local opened, busy = false, false
	local function toggleSection()
		if busy then return end
		opened, busy = not opened, true
		s.TweenService:Create(bottom, TweenInfo.new(0.25, Enum.EasingStyle.Sine), {
			Size = UDim2.new(0, 212, 0, opened and layout.AbsoluteContentSize.Y + 4 or 0)
		}):Play()
		s.TweenService:Create(toggleImg, TweenInfo.new(0.25, Enum.EasingStyle.Sine), {
			Rotation = opened and 0 or 180
		}):Play()
		task.wait(0.25)
		busy = false
	end

	layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		if not busy and opened then
			bottom.Size = UDim2.new(0, 212, 0, layout.AbsoluteContentSize.Y + 4)
		end
	end)

	toggle.MouseButton1Click:Connect(toggleSection)

	local lib = {}

	function lib:Label(txt)
		local l = Instance.new("TextButton")
		l.Parent = bottom
		l.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
		l.Size = UDim2.new(0, 203, 0, 26)
		l.AutoButtonColor = false
		l.Font = Enum.Font.GothamSemibold
		l.Text = tostring(txt)
		l.TextColor3 = Color3.new(1,1,1)
		l.TextSize = 14
		return l
	end

	-- Other methods (Button, Toggle, Slider) would follow same pattern

	return lib
end

return ui
