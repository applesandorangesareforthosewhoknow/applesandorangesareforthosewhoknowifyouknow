local lib = {}

local g = {
    tab_color = Color3.fromRGB(45, 45, 45),
    btn_color = Color3.fromRGB(30, 30, 30),
    text_color = Color3.fromRGB(255, 255, 255),
    tab_width = 200,
    tab_height = 30,
    gap = 10
}

local uis = game:GetService("UserInputService")
local coregui = game:GetService("CoreGui")

local gui = Instance.new("ScreenGui", coregui)
gui.Name = "CornageFloatingUI"
gui.ResetOnSpawn = false

local tab_count = 0

local function make_draggable(frame)
    local dragging = false
    local dragInput, mousePos, framePos

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            mousePos = input.Position
            framePos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    uis.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - mousePos
            frame.Position = UDim2.new(0, framePos.X.Offset + delta.X, 0, framePos.Y.Offset + delta.Y)
        end
    end)
end

function lib:tab(name)
    tab_count = tab_count + 1

    local tab = Instance.new("Frame", gui)
    tab.Size = UDim2.new(0, g.tab_width, 0, g.tab_height)
    tab.Position = UDim2.new(0, (g.tab_width + g.gap) * (tab_count - 1) + 10, 0, 100)
    tab.BackgroundColor3 = g.tab_color
    tab.BorderSizePixel = 0
    tab.Active = true
    make_draggable(tab)

    local title = Instance.new("TextLabel", tab)
    title.Size = UDim2.new(0.8, -5, 1, 0)
    title.Position = UDim2.new(0, 5, 0, 0)
    title.Text = name
    title.TextColor3 = g.text_color
    title.Font = Enum.Font.SourceSansBold
    title.TextSize = 18
    title.BackgroundTransparency = 1
    title.TextXAlignment = Enum.TextXAlignment.Left

    local toggle = Instance.new("TextButton", tab)
    toggle.Size = UDim2.new(0.2, 0, 1, 0)
    toggle.Position = UDim2.new(0.8, 0, 0, 0)
    toggle.Text = "+"
    toggle.TextColor3 = g.text_color
    toggle.Font = Enum.Font.SourceSansBold
    toggle.TextSize = 20
    toggle.BackgroundTransparency = 1

    local content = Instance.new("Frame", tab)
    content.Position = UDim2.new(0, 0, 1, 0)
    content.Size = UDim2.new(1, 0, 0, 0)
    content.BackgroundTransparency = 1
    content.Visible = false
    content.ClipsDescendants = true

    local open = false
    toggle.MouseButton1Click:Connect(function()
        open = not open
        content.Visible = open
        toggle.Text = open and "-" or "+"
        tab.Size = UDim2.new(0, g.tab_width, 0, open and (#content:GetChildren() * 35 + g.tab_height) or g.tab_height)
    end)

    local t = {}
    function t:button(txt, fn)
        local b = Instance.new("TextButton", content)
        b.Size = UDim2.new(1, -10, 0, 30)
        b.Position = UDim2.new(0, 5, 0, (#content:GetChildren() - 1) * 35)
        b.BackgroundColor3 = g.btn_color
        b.TextColor3 = g.text_color
        b.Font = Enum.Font.SourceSans
        b.TextSize = 16
        b.Text = txt
        b.MouseButton1Click:Connect(fn)

        content.Size = UDim2.new(1, 0, 0, #content:GetChildren() * 35)
        if open then
            tab.Size = UDim2.new(0, g.tab_width, 0, #content:GetChildren() * 35 + g.tab_height)
        end
    end

    return t
end

return lib
