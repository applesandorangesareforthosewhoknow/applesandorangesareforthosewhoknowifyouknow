-- UI Library (Tab UI, no blue underline under active tab)

local Library = {}
Library.__index = Library

local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")

function Library.new(title)
    local self = setmetatable({}, Library)

    -- Create ScreenGui in CoreGui
    self.ScreenGui = Instance.new("ScreenGui")
    self.ScreenGui.Name = title or "UI Library"
    self.ScreenGui.ResetOnSpawn = false
    self.ScreenGui.Parent = CoreGui

    -- Main Frame
    self.MainFrame = Instance.new("Frame")
    self.MainFrame.Size = UDim2.new(0, 500, 0, 350)
    self.MainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
    self.MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    self.MainFrame.BorderSizePixel = 0
    self.MainFrame.Parent = self.ScreenGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = self.MainFrame

    -- Title
    self.TitleLabel = Instance.new("TextLabel")
    self.TitleLabel.Size = UDim2.new(1, 0, 0, 36)
    self.TitleLabel.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    self.TitleLabel.BorderSizePixel = 0
    self.TitleLabel.Text = title or "UI Library"
    self.TitleLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    self.TitleLabel.Font = Enum.Font.GothamBold
    self.TitleLabel.TextSize = 22
    self.TitleLabel.Parent = self.MainFrame

    -- Tabs Container
    self.TabsFrame = Instance.new("Frame")
    self.TabsFrame.Size = UDim2.new(0, 120, 1, -36)
    self.TabsFrame.Position = UDim2.new(0, 0, 0, 36)
    self.TabsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    self.TabsFrame.BorderSizePixel = 0
    self.TabsFrame.Parent = self.MainFrame

    local tabsCorner = Instance.new("UICorner")
    tabsCorner.CornerRadius = UDim.new(0, 8)
    tabsCorner.Parent = self.TabsFrame

    -- Pages Container
    self.PagesFrame = Instance.new("Frame")
    self.PagesFrame.Size = UDim2.new(1, -120, 1, -36)
    self.PagesFrame.Position = UDim2.new(0, 120, 0, 36)
    self.PagesFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    self.PagesFrame.BorderSizePixel = 0
    self.PagesFrame.Parent = self.MainFrame

    local pagesCorner = Instance.new("UICorner")
    pagesCorner.CornerRadius = UDim.new(0, 8)
    pagesCorner.Parent = self.PagesFrame

    self.Tabs = {}
    self.Pages = {}
    self.CurrentTab = nil

    local tabsLayout = Instance.new("UIListLayout")
    tabsLayout.FillDirection = Enum.FillDirection.Vertical
    tabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabsLayout.Parent = self.TabsFrame

    return self
end

function Library:AddTab(name)
    assert(type(name) == "string", "Tab name must be a string")

    local tabButton = Instance.new("TextButton")
    tabButton.Text = name
    tabButton.TextColor3 = Color3.fromRGB(170, 170, 170)
    tabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    tabButton.BorderSizePixel = 0
    tabButton.Size = UDim2.new(1, 0, 0, 40)
    tabButton.Font = Enum.Font.Gotham
    tabButton.TextSize = 18
    tabButton.AutoButtonColor = false
    tabButton.Parent = self.TabsFrame

    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 5)
    tabCorner.Parent = tabButton

    local pageFrame = Instance.new("ScrollingFrame")
    pageFrame.Size = UDim2.new(1, 0, 1, 0)
    pageFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    pageFrame.BorderSizePixel = 0
    pageFrame.Visible = false
    pageFrame.ScrollBarThickness = 6
    pageFrame.Parent = self.PagesFrame

    local pageCorner = Instance.new("UICorner")
    pageCorner.CornerRadius = UDim.new(0, 8)
    pageCorner.Parent = pageFrame

    local pageLayout = Instance.new("UIListLayout")
    pageLayout.SortOrder = Enum.SortOrder.LayoutOrder
    pageLayout.Padding = UDim.new(0, 8)
    pageLayout.Parent = pageFrame
    pageLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

    self.Tabs[name] = tabButton
    self.Pages[name] = pageFrame

    local function selectTab()
        if self.CurrentTab == name then return end
        if self.CurrentTab then
            self.Tabs[self.CurrentTab].BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            self.Tabs[self.CurrentTab].TextColor3 = Color3.fromRGB(170, 170, 170)
            self.Pages[self.CurrentTab].Visible = false
        end
        self.CurrentTab = name
        tabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        tabButton.TextColor3 = Color3.fromRGB(230, 230, 230)
        pageFrame.Visible = true
    end

    tabButton.MouseButton1Click:Connect(selectTab)

    if not self.CurrentTab then
        selectTab()
    end

    return pageFrame
end

function Library:Destroy()
    self.ScreenGui:Destroy()
end

return Library
