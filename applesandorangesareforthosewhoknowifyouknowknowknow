local u={};local c=game:GetService'CoreGui';local UserInputService=game:GetService'UserInputService';local Players=game:GetService'Players'
local Core=Instance.new;local T=table.insert
local function new(cls,p) local o=Core(cls) if p then o.Parent=p end return o end
local function mkTxt(t,x,y,w,h,txt,s) t.Position=UDim2.new(x,0,y,0) t.Size=UDim2.new(w,0,h,0) t.Text=txt or"" t.Font=s or Enum.Font.SourceSans t.TextSize=14 t.TextColor3=Color3.new(1,1,1) t.BackgroundTransparency=1 t.TextXAlignment=Enum.TextXAlignment.Left return t end

u.ui=new("ScreenGui",c);u.ui.Name="ULib"
local wnd=new("Frame",u.ui) wnd.Size=UDim2.new(0,350,0,400) wnd.Position=UDim2.new(0.5,-175,0.5,-200)
wnd.BackgroundColor3=Color3.fromRGB(30,30,30)
wnd.Visible=true
local tabBtns=new("Frame",wnd) tabBtns.Size=UDim2.new(0,100,1,0) tabBtns.BackgroundColor3=Color3.fromRGB(20,20,20)
local tabCont=new("Frame",wnd) tabCont.Position=UDim2.new(0,100,0,0) tabCont.Size=UDim2.new(1,-100,1,0)
tabCont.BackgroundColor3=Color3.fromRGB(40,40,40)

local tabs={} -- array of {btn,content}
local activeTab=0

local function clearChildren(p)
    for i=1,#p:GetChildren() do p:GetChildren()[i]:Destroy() end
end

local function selectTab(i)
    if activeTab==i then return end
    for j=1,#tabs do
        tabs[j][1].BackgroundColor3=Color3.fromRGB(20,20,20)
        tabs[j][2].Visible=false
    end
    tabs[i][1].BackgroundColor3=Color3.fromRGB(60,60,60)
    tabs[i][2].Visible=true
    activeTab=i
end

function u.newWindow(name)
    local tbtn=new("TextButton",tabBtns)
    tbtn.Size=UDim2.new(1,0,0,30)
    tbtn.BackgroundColor3=Color3.fromRGB(20,20,20)
    tbtn.Text=name
    tbtn.AutoButtonColor=false
    local tcont=new("ScrollingFrame",tabCont)
    tcont.Size=UDim2.new(1,0,1,0)
    tcont.BackgroundColor3=Color3.fromRGB(40,40,40)
    tcont.Visible=false
    tcont.CanvasSize=UDim2.new(0,0,1,0)
    tcont.ScrollBarThickness=6
    local e={btn=tbtn,cont=tcont,buttons={},toggles={},sliders={},dropdowns={}}
    T(tabs,e)
    tbtn.MouseButton1Click:Connect(function() selectTab(#tabs) end)
    if #tabs==1 then selectTab(1) end
    return e
end

-- Button
function u.addButton(tab,text,callback)
    local b=new("TextButton",tab.cont)
    b.Size=UDim2.new(1,-10,0,30)
    b.Position=UDim2.new(0,5,0,#tab.buttons*35)
    b.BackgroundColor3=Color3.fromRGB(60,60,60)
    b.Text=text
    b.AutoButtonColor=false
    b.MouseButton1Click:Connect(callback)
    T(tab.buttons,b)
    tab.cont.CanvasSize=UDim2.new(0,0,0,#tab.buttons*35)
end

-- Toggle
function u.addToggle(tab,text,callback)
    local f=new("Frame",tab.cont)
    f.Size=UDim2.new(1,-10,0,30)
    f.Position=UDim2.new(0,5,0,#tab.toggles*35)
    f.BackgroundColor3=Color3.fromRGB(60,60,60)
    local tbtn=new("TextButton",f)
    tbtn.Size=UDim2.new(0,20,1,0)
    tbtn.Position=UDim2.new(1,-25,0,0)
    tbtn.BackgroundColor3=Color3.fromRGB(40,40,40)
    tbtn.Text=""
    tbtn.AutoButtonColor=false
    local label=new("TextLabel",f)
    label.Size=UDim2.new(1,-30,1,0)
    label.Position=UDim2.new(0,0,0,0)
    label.BackgroundTransparency=1
    label.Text=text
    label.TextColor3=Color3.new(1,1,1)
    label.TextXAlignment=Enum.TextXAlignment.Left
    local val=false
    local function setVal(v)
        val=v
        tbtn.BackgroundColor3=v and Color3.fromRGB(0,170,0) or Color3.fromRGB(40,40,40)
        callback(v)
    end
    tbtn.MouseButton1Click:Connect(function() setVal(not val) end)
    setVal(false)
    T(tab.toggles,f)
    tab.cont.CanvasSize=UDim2.new(0,0,0,#tab.buttons*35+#tab.toggles*35)
end

-- Slider
function u.addSlider(tab,text,min,max,callback)
    local f=new("Frame",tab.cont)
    f.Size=UDim2.new(1,-10,0,40)
    f.Position=UDim2.new(0,5,0,#tab.sliders*45)
    f.BackgroundColor3=Color3.fromRGB(60,60,60)
    local label=new("TextLabel",f)
    label.Size=UDim2.new(1,0,0,15)
    label.BackgroundTransparency=1
    label.Text=text
    label.TextColor3=Color3.new(1,1,1)
    label.TextXAlignment=Enum.TextXAlignment.Left
    local sliderBar=new("Frame",f)
    sliderBar.Position=UDim2.new(0,0,0,20)
    sliderBar.Size=UDim2.new(1,0,0,15)
    sliderBar.BackgroundColor3=Color3.fromRGB(40,40,40)
    local fill=new("Frame",sliderBar)
    fill.Size=UDim2.new(0,0,1,0)
    fill.BackgroundColor3=Color3.fromRGB(0,170,255)
    local dragging=false
    local function setVal(x)
        local s=math.clamp((x-sliderBar.AbsolutePosition.X)/sliderBar.AbsoluteSize.X,0,1)
        fill.Size=UDim2.new(s,0,1,0)
        local v=min+s*(max-min)
        callback(v)
    end
    sliderBar.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=true end
    end)
    sliderBar.InputEnded:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end
    end)
    UserInputService.InputChanged:Connect(function(i)
        if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then setVal(i.Position.X) end
    end)
    T(tab.sliders,f)
    tab.cont.CanvasSize=UDim2.new(0,0,0,#tab.buttons*35+#tab.toggles*35+#tab.sliders*45)
end

-- Dropdown
function u.addDropdown(tab,text,options,callback)
    local f=new("Frame",tab.cont)
    f.Size=UDim2.new(1,-10,0,30)
    f.Position=UDim2.new(0,5,0,#tab.dropdowns*35)
    f.BackgroundColor3=Color3.fromRGB(60,60,60)
    local label=new("TextLabel",f)
    label.Size=UDim2.new(1,0,1,0)
    label.BackgroundTransparency=1
    label.Text=text
    label.TextColor3=Color3.new(1,1,1)
    label.TextXAlignment=Enum.TextXAlignment.Left
    local dropdownBtn=new("TextButton",f)
    dropdownBtn.Size=UDim2.new(0,20,1,0)
    dropdownBtn.Position=UDim2.new(1,-25,0,0)
    dropdownBtn.BackgroundColor3=Color3.fromRGB(40,40,40)
    dropdownBtn.Text="v"
    dropdownBtn.AutoButtonColor=false
    local list=new("ScrollingFrame",tab.cont)
    list.Size=UDim2.new(1,-10,0,100)
    list.Position=UDim2.new(0,5,0,f.Position.Y.Offset+30)
    list.BackgroundColor3=Color3.fromRGB(50,50,50)
    list.Visible=false
    list.CanvasSize=UDim2.new(0,0,0,0)
    list.ScrollBarThickness=6
    local items={}
    local function rebuild()
        clearChildren(list)
        for i=1,#options do
            local it=new("TextButton",list)
            it.Size=UDim2.new(1,0,0,20)
            it.Position=UDim2.new(0,0,0,(i-1)*20)
            it.BackgroundColor3=Color3.fromRGB(60,60,60)
            it.Text=options[i]
            it.AutoButtonColor=false
            it.MouseButton1Click:Connect(function()
                dropdownBtn.Text=options[i]
                callback(options[i])
                list.Visible=false
            end)
            items[i]=it
        end
        list.CanvasSize=UDim2.new(0,0,0,#options*20)
    end
    dropdownBtn.MouseButton1Click:Connect(function() list.Visible=not list.Visible end)
    rebuild()
    T(tab.dropdowns,f)
    tab.cont.CanvasSize=UDim2.new(0,0,0,#tab.buttons*35+#tab.toggles*35+#tab.sliders*45+#tab.dropdowns*35+100)
end

-- Notifications (simple)
local notifFrame=new("Frame",u.ui)
notifFrame.Size=UDim2.new(0,300,0,100)
notifFrame.Position=UDim2.new(1,-310,0,10)
notifFrame.BackgroundTransparency=1
local notifList=new("ScrollingFrame",notifFrame)
notifList.Size=UDim2.new(1,0,1,0)
notifList.BackgroundTransparency=1
notifList.CanvasSize=UDim2.new(0,0,0,0)
notifList.ScrollBarThickness=6
local notifs={}

function u.notify(txt,time)
    local t=new("TextLabel",notifList)
    t.Size=UDim2.new(1,0,0,25)
    t.BackgroundColor3=Color3.fromRGB(40,40,40)
    t.TextColor3=Color3.new(1,1,1)
    t.Text=txt
    T(notifs,t)
    notifList.CanvasSize=UDim2.new(0,0,0,#notifs*25)
    task.delay(time or 5,function()
        t:Destroy()
        for i=1,#notifs do
            if not notifs[i].Parent then table.remove(notifs,i) break end
        end
        notifList.CanvasSize=UDim2.new(0,0,0,#notifs*25)
    end)
end

-- Player Joined/Left
local joinedListeners={}
local leftListeners={}
Players.PlayerAdded:Connect(function(p)
    for i=1,#joinedListeners do joinedListeners[i](p) end
end)
Players.PlayerRemoving:Connect(function(p)
    for i=1,#leftListeners do leftListeners[i](p) end
end)

function u.onPlayerJoin(fn) T(joinedListeners,fn) end
function u.onPlayerLeave(fn) T(leftListeners,fn) end

-- Visibility toggle on Delete key
UserInputService.InputBegan:Connect(function(input,gp)
    if gp then return end
    if input.KeyCode==Enum.KeyCode.Delete then
        wnd.Visible=not wnd.Visible
    end
end)

return u
