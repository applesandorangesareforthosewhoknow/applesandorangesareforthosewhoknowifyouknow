local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")

local library = {}

function library:CreateWindow(name)
    local screen = Instance.new("ScreenGui", CoreGui)
    screen.IgnoreGuiInset = true
    screen.Name = name
    screen.ResetOnSpawn = false

    local window = Instance.new("Frame", screen)
    window.Size = UDim2.new(0, 600, 0, 400)
    window.Position = UDim2.new(0.75, -300, 0.5, -200)
    window.AnchorPoint = Vector2.new(0.5, 0.5)
    window.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    window.BorderSizePixel = 0

    local sidebar = Instance.new("Frame", window)
    sidebar.Size = UDim2.new(0, 150, 1, 0)
    sidebar.Position = UDim2.new(0, 0, 0, 0)
    sidebar.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
    sidebar.BorderSizePixel = 0

    local content = Instance.new("Frame", window)
    content.Size = UDim2.new(1, -150, 1, 0)
    content.Position = UDim2.new(0, 150, 0, 0)
    content.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    content.BorderSizePixel = 0

    local sidebarLayout = Instance.new("UIListLayout", sidebar)
    sidebarLayout.FillDirection = Enum.FillDirection.Vertical
    sidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
    sidebarLayout.Padding = UDim.new(0, 4)

    local currentTab

    local function createTab(name)
        local btn = Instance.new("TextButton", sidebar)
        btn.Size = UDim2.new(1, 0, 0, 30)
        btn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.Font = Enum.Font.SourceSansBold
        btn.TextSize = 20
        btn.Text = name

        local tabFrame = Instance.new("Frame", content)
        tabFrame.Size = UDim2.new(1, 0, 1, 0)
        tabFrame.BackgroundTransparency = 1
        tabFrame.Visible = false

        local layout = Instance.new("UIListLayout", tabFrame)
        layout.SortOrder = Enum.SortOrder.LayoutOrder
        layout.Padding = UDim.new(0, 8)

        btn.MouseButton1Click:Connect(function()
            if currentTab then
                currentTab.Visible = false
            end
            currentTab = tabFrame
            currentTab.Visible = true
        end)

        if not currentTab then
            currentTab = tabFrame
            currentTab.Visible = true
        end

        return tabFrame
    end

    return {
        CreateTab = createTab,
        Notify = function(text, duration)
            local holder = screen:FindFirstChild("NotifyHolder")
            if not holder then
                holder = Instance.new("Frame", screen)
                holder.Name = "NotifyHolder"
                holder.Size = UDim2.new(0, 300, 1, -20)
                holder.Position = UDim2.new(1, -310, 0, 10)
                holder.BackgroundTransparency = 1
                local list = Instance.new("UIListLayout", holder)
                list.SortOrder = Enum.SortOrder.LayoutOrder
                list.Padding = UDim.new(0, 5)
            end

            local label = Instance.new("TextLabel", holder)
            label.Size = UDim2.new(1, 0, 0, 30)
            label.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            label.TextColor3 = Color3.new(1, 1, 1)
            label.TextScaled = true
            label.Text = text

            delay(duration or 3, function()
                label:Destroy()
            end)
        end
    }
end

return library
