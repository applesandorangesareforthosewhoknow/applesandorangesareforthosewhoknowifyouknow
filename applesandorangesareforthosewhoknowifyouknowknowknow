local Players = game:GetService("Players")
local player = Players.LocalPlayer
local UIS = game:GetService("UserInputService")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CleanTabUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main UI container
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 600, 0, 400)
mainFrame.Position = UDim2.new(0, 100, 0, 100)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

-- Tab container (top area)
local tabContainer = Instance.new("Frame")
tabContainer.Name = "TabContainer"
tabContainer.Size = UDim2.new(1, 0, 0, 60)
tabContainer.Position = UDim2.new(0, 0, 0, 0)
tabContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
tabContainer.BorderSizePixel = 0
tabContainer.Parent = mainFrame

-- Tab layout (horizontal wrap)
local tabLayout = Instance.new("UIGridLayout")
tabLayout.CellSize = UDim2.new(0, 120, 0, 30)
tabLayout.CellPadding = UDim2.new(0, 6, 0, 6)
tabLayout.FillDirection = Enum.FillDirection.Horizontal
tabLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
tabLayout.VerticalAlignment = Enum.VerticalAlignment.Top
tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabLayout.Parent = tabContainer

-- Content container (bottom area)
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Position = UDim2.new(0, 0, 0, 60)
contentFrame.Size = UDim2.new(1, 0, 1, -60)
contentFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
contentFrame.BorderSizePixel = 0
contentFrame.Parent = mainFrame

-- Tab management
local tabs = {}

local function switchTab(tabName)
	for name, info in pairs(tabs) do
		info.content.Visible = (name == tabName)
		info.button.BackgroundColor3 = name == tabName and Color3.fromRGB(60, 60, 60) or Color3.fromRGB(35, 35, 35)
	end
end

local function createTab(tabName)
	if tabs[tabName] then return end

	-- Create tab button
	local button = Instance.new("TextButton")
	button.Text = tabName
	button.Size = UDim2.new(0, 120, 0, 30)
	button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	button.TextColor3 = Color3.new(1, 1, 1)
	button.Font = Enum.Font.SourceSans
	button.TextSize = 16
	button.BorderSizePixel = 0
	button.AutoButtonColor = false
	button.Parent = tabContainer

	-- Create content frame
	local tabContent = Instance.new("Frame")
	tabContent.Name = tabName .. "_Content"
	tabContent.Size = UDim2.new(1, 0, 1, 0)
	tabContent.Position = UDim2.new(0, 0, 0, 0)
	tabContent.BackgroundTransparency = 1
	tabContent.Visible = false
	tabContent.Parent = contentFrame

	-- Save reference
	tabs[tabName] = {
		button = button,
		content = tabContent
	}

	-- Button click switches tab
	button.MouseButton1Click:Connect(function()
		switchTab(tabName)
	end)

	-- Default to first tab
	if not next(tabs, tabName) then
		switchTab(tabName)
	end

	return tabContent
end

-- Example usage:
do
	local home = createTab("Home")
	local lbl = Instance.new("TextLabel")
	lbl.Text = "Welcome to the Home Tab"
	lbl.TextColor3 = Color3.new(1, 1, 1)
	lbl.BackgroundTransparency = 1
	lbl.Font = Enum.Font.SourceSansBold
	lbl.TextSize = 22
	lbl.Size = UDim2.new(1, 0, 0, 50)
	lbl.Position = UDim2.new(0, 0, 0, 10)
	lbl.Parent = home
end

do
	local settings = createTab("Settings")
	local lbl = Instance.new("TextLabel")
	lbl.Text = "Settings go here"
	lbl.TextColor3 = Color3.new(1, 1, 1)
	lbl.BackgroundTransparency = 1
	lbl.Font = Enum.Font.SourceSansBold
	lbl.TextSize = 22
	lbl.Size = UDim2.new(1, 0, 0, 50)
	lbl.Position = UDim2.new(0, 0, 0, 10)
	lbl.Parent = settings
end

-- Add more tabs like this:
-- local tab = createTab("Inventory")
-- ... tab.Parent = ...

