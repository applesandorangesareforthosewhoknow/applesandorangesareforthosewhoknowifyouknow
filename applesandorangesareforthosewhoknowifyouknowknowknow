local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")

-- Library table
local UILib = {}

-- Settings
local tabWidth = 40
local tabHeight = 100
local tabSpacing = 10
local openSize = UDim2.new(0, 300, 0, 200)
local tabBackgroundColor = Color3.fromRGB(30, 30, 30)
local contentColor = Color3.fromRGB(45, 45, 45)
local buttonColor = Color3.fromRGB(60, 60, 60)

-- Container
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FloatingTabLib"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Parent = CoreGui

-- Tab management
UILib.tabs = {}

function UILib:CreateTab(name: string)
	local self = {}

	local index = #UILib.tabs + 1
	table.insert(UILib.tabs, self)

	-- Tab Button
	local tabButton = Instance.new("TextButton")
	tabButton.Name = name .. "_Button"
	tabButton.Size = UDim2.new(0, tabWidth, 0, tabHeight)
	tabButton.Position = UDim2.new(1, -tabWidth, 0, (tabHeight + tabSpacing) * (index - 1))
	tabButton.AnchorPoint = Vector2.new(0, 0)
	tabButton.BackgroundColor3 = buttonColor
	tabButton.Text = "→"
	tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	tabButton.Font = Enum.Font.SourceSansBold
	tabButton.TextSize = 24
	tabButton.Parent = screenGui

	-- Content Frame
	local contentFrame = Instance.new("Frame")
	contentFrame.Name = name .. "_Content"
	contentFrame.Size = openSize
	contentFrame.Position = UDim2.new(1, -tabWidth, 0, (tabHeight + tabSpacing) * (index - 1))
	contentFrame.AnchorPoint = Vector2.new(1, 0)
	contentFrame.BackgroundColor3 = contentColor
	contentFrame.Visible = false
	contentFrame.Parent = screenGui

	-- Close button
	local closeButton = Instance.new("TextButton")
	closeButton.Size = UDim2.new(0, 30, 0, 30)
	closeButton.Position = UDim2.new(1, -35, 0, 5)
	closeButton.AnchorPoint = Vector2.new(1, 0)
	closeButton.BackgroundColor3 = tabBackgroundColor
	closeButton.Text = "X"
	closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	closeButton.Font = Enum.Font.SourceSans
	closeButton.TextSize = 18
	closeButton.Parent = contentFrame

	-- Toggle state
	local isOpen = false

	local function toggle()
		isOpen = not isOpen
		if isOpen then
			contentFrame.Visible = true
			tabButton.Text = "←"
			local goal = { Position = UDim2.new(1, -tabWidth - openSize.X.Offset, 0, (tabHeight + tabSpacing) * (index - 1)) }
			TweenService:Create(contentFrame, TweenInfo.new(0.25), goal):Play()
		else
			local goal = { Position = UDim2.new(1, -tabWidth, 0, (tabHeight + tabSpacing) * (index - 1)) }
			local tween = TweenService:Create(contentFrame, TweenInfo.new(0.25), goal)
			tween:Play()
			tween.Completed:Connect(function()
				if not isOpen then
					contentFrame.Visible = false
				end
			end)
			tabButton.Text = "→"
		end
	end

	tabButton.MouseButton1Click:Connect(toggle)
	closeButton.MouseButton1Click:Connect(toggle)

	-- Public
	self.Content = contentFrame
	self.Toggle = toggle

	return self
end

return UILib
