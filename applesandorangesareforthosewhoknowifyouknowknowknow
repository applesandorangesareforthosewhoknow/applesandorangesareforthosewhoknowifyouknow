local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local Players = game:GetService("Players")
local LP = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CoreLibUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = CoreGui

local dragger = function(frame)
	local drag = false
	local start, pos

	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			drag = true
			start = input.Position
			pos = frame.Position
		end
	end)

	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			drag = false
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if drag and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Position - start
			frame.Position = UDim2.new(pos.X.Scale, pos.X.Offset + delta.X, pos.Y.Scale, pos.Y.Offset + delta.Y)
		end
	end)
end

local function newInstance(class, props, parent)
	local inst = Instance.new(class)
	for i, v in pairs(props) do
		inst[i] = v
	end
	inst.Parent = parent
	return inst
end

local notifyHolder = newInstance("Frame", {
	Name = "NotifyHolder",
	Size = UDim2.new(0, 300, 1, -20),
	Position = UDim2.new(1, -310, 0, 10),
	BackgroundTransparency = 1
}, ScreenGui)

local notifyLayout = newInstance("UIListLayout", {
	SortOrder = Enum.SortOrder.LayoutOrder,
	Padding = UDim.new(0, 5)
}, notifyHolder)

local function notify(text, time)
	local f = newInstance("TextLabel", {
		Size = UDim2.new(1, 0, 0, 30),
		BackgroundColor3 = Color3.new(0.2, 0.2, 0.2),
		TextColor3 = Color3.new(1, 1, 1),
		Text = text,
		Font = Enum.Font.SourceSans,
		TextSize = 20,
		ClipsDescendants = true
	}, notifyHolder)
	game:GetService("Debris"):AddItem(f, time or 2)
end

local tabs = {}

local function makeTab(main, name)
	local t = {}
	local container = main.Container

	local tabBtn = newInstance("TextButton", {
		Text = name,
		Size = UDim2.new(1, 0, 0, 30),
		BackgroundColor3 = Color3.fromRGB(40, 40, 40),
		TextColor3 = Color3.new(1, 1, 1),
		Font = Enum.Font.SourceSans,
		TextSize = 20
	}, main.Sidebar)

	local tabFrame = newInstance("Frame", {
		Name = name,
		Size = UDim2.new(1, 0, 1, 0),
		BackgroundTransparency = 1,
		Visible = false
	}, container)

	local list = newInstance("UIListLayout", {
		SortOrder = Enum.SortOrder.LayoutOrder,
		Padding = UDim.new(0, 5)
	}, tabFrame)

	table.insert(tabs, tabFrame)

	tabBtn.MouseButton1Click:Connect(function()
		for _, v in ipairs(tabs) do
			v.Visible = false
		end
		tabFrame.Visible = true
	end)

	t.addButton = function(text, callback)
		local btn = newInstance("TextButton", {
			Text = text,
			Size = UDim2.new(1, 0, 0, 30),
			BackgroundColor3 = Color3.fromRGB(60, 60, 60),
			TextColor3 = Color3.new(1, 1, 1),
			Font = Enum.Font.SourceSans,
			TextSize = 20
		}, tabFrame)
		btn.MouseButton1Click:Connect(function()
			callback()
		end)
	end

	t.addToggle = function(text, callback)
		local state = false
		local btn = newInstance("TextButton", {
			Text = text .. ": OFF",
			Size = UDim2.new(1, 0, 0, 30),
			BackgroundColor3 = Color3.fromRGB(60, 60, 60),
			TextColor3 = Color3.new(1, 1, 1),
			Font = Enum.Font.SourceSans,
			TextSize = 20
		}, tabFrame)
		btn.MouseButton1Click:Connect(function()
			state = not state
			btn.Text = text .. ": " .. (state and "ON" or "OFF")
			callback(state)
		end)
	end

	t.addSlider = function(text, min, max, callback)
		local frame = newInstance("Frame", {
			Size = UDim2.new(1, 0, 0, 30),
			BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		}, tabFrame)

		local label = newInstance("TextLabel", {
			Text = text .. ": " .. tostring(min),
			Size = UDim2.new(1, 0, 0, 15),
			TextColor3 = Color3.new(1, 1, 1),
			BackgroundTransparency = 1,
			Font = Enum.Font.SourceSans,
			TextSize = 16
		}, frame)

		local bar = newInstance("Frame", {
			Size = UDim2.new(1, -10, 0, 10),
			Position = UDim2.new(0, 5, 0, 20),
			BackgroundColor3 = Color3.fromRGB(70, 70, 70)
		}, frame)

		local knob = newInstance("Frame", {
			Size = UDim2.new(0, 10, 1, 0),
			Position = UDim2.new(0, 0, 0, 0),
			BackgroundColor3 = Color3.fromRGB(200, 200, 200)
		}, bar)

		local dragging = false

		bar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
			end
		end)

		UIS.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = false
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				local rel = input.Position.X - bar.AbsolutePosition.X
				local pct = math.clamp(rel / bar.AbsoluteSize.X, 0, 1)
				local val = math.floor(min + (max - min) * pct)
				knob.Position = UDim2.new(pct, -5, 0, 0)
				label.Text = text .. ": " .. tostring(val)
				callback(val)
			end
		end)
	end

	t.addDropdown = function(label, list, callback)
		local dropdown = newInstance("TextButton", {
			Text = label,
			Size = UDim2.new(1, 0, 0, 30),
			BackgroundColor3 = Color3.fromRGB(60, 60, 60),
			TextColor3 = Color3.new(1, 1, 1),
			Font = Enum.Font.SourceSans,
			TextSize = 20
		}, tabFrame)

		local open = false
		local items = {}

		dropdown.MouseButton1Click:Connect(function()
			open = not open
			for _, item in ipairs(items) do
				item.Visible = open
			end
		end)

		for i = 1, #list do
			local choice = list[i]
			local opt = newInstance("TextButton", {
				Text = choice,
				Size = UDim2.new(1, 0, 0, 30),
				BackgroundColor3 = Color3.fromRGB(50, 50, 50),
				TextColor3 = Color3.new(1, 1, 1),
				Font = Enum.Font.SourceSans,
				TextSize = 18,
				Visible = false
			}, tabFrame)
			table.insert(items, opt)
			opt.MouseButton1Click:Connect(function()
				callback(choice)
				open = false
				for _, item in ipairs(items) do
					item.Visible = false
				end
			end)
		end
	end

	return t
end

local lib = {}

function lib.newWindow(title)
	local frame = newInstance("Frame", {
		Size = UDim2.new(0, 500, 0, 400),
		Position = UDim2.new(0.5, -250, 0.5, -200),
		BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	}, ScreenGui)

	local sidebar = newInstance("Frame", {
		Size = UDim2.new(0, 100, 1, 0),
		BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	}, frame)

	local container = newInstance("Frame", {
		Size = UDim2.new(1, -100, 1, 0),
		Position = UDim2.new(0, 100, 0, 0),
		BackgroundTransparency = 1
	}, frame)

	newInstance("UIListLayout", {
		SortOrder = Enum.SortOrder.LayoutOrder,
		Padding = UDim.new(0, 5)
	}, sidebar)

	dragger(sidebar)

	local tab = makeTab({ Sidebar = sidebar, Container = container }, "Tab 1")
	tabs[1] = tab
	return tab
end

function lib.notify(txt, t)
	notify(txt, t)
end

function lib.onPlayerJoin(cb)
	Players.PlayerAdded:Connect(cb)
end

function lib.onPlayerLeave(cb)
	Players.PlayerRemoving:Connect(cb)
end

return lib
